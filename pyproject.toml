[tool.poetry]
name = "requirements-bot"
version = "0.1.0"
description = "A bot to help figure out software requirements."
authors = ["Your Name <your.email@example.com>"]

[tool.poetry.dependencies]
python = ">=3.11,<4.0"
typer = "0.16.0"
pydantic = "2.11.7"
sqlalchemy = "2.0.43"
alembic = "1.16.4"
openai = "1.99.9"
google-genai = "1.30.0"
anthropic = "0.64.0"
prompt-toolkit = "3.0.52"
rich = "14.1.0"

[tool.poetry.group.dev.dependencies]
pytest = "8.4.1"
coverage = "7.10.6"
ruff = "0.13.1"
pre-commit = "4.3.0"

[tool.coverage.run]
source = ["requirements_bot"]
branch = true
omit = [
    "*/tests/*",
    "*/alembic/*",
    "*/migrations/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:"
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"

[tool.ruff]
target-version = "py311"
line-length = 120
exclude = ["alembic/"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "B904",  # Within `except` clause, raise exceptions with `raise ... from err`
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["requirements_bot"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
