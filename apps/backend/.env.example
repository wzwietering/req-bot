# ============================================
# Requirements Bot - Backend Configuration
# ============================================

# ============================================
# JWT Configuration (REQUIRED)
# ============================================
# Generate a secure 32+ character secret key
# You can generate one with: python -c "import secrets; print(secrets.token_urlsafe(32))"
JWT_SECRET_KEY=your-very-secure-and-random-jwt-secret-key

# JWT Token Settings
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=15
JWT_REFRESH_TOKEN_EXPIRE_DAYS=30
JWT_ALGORITHM=HS256

# ============================================
# Database Configuration
# ============================================
# SQLite for development (default)
DATABASE_URL=sqlite:///./dev.db

# ============================================
# OAuth Provider Configuration (REQUIRED)
# ============================================

# Google OAuth 2.0
# Get credentials from: https://console.developers.google.com/
GOOGLE_CLIENT_ID=your-google-client-id
GOOGLE_CLIENT_SECRET=your-google-client-secret

# GitHub OAuth App
# Get credentials from: https://github.com/settings/developers
GITHUB_CLIENT_ID=your-github-client-id
GITHUB_CLIENT_SECRET=your-github-client-secret

# Microsoft Azure AD
# Get credentials from: https://portal.azure.com/#view/Microsoft_AAD_RegisteredApps/ApplicationsListBlade
MICROSOFT_CLIENT_ID=your-microsoft-client-id
MICROSOFT_CLIENT_SECRET=your-microsoft-client-secret

# ============================================
# CORS Configuration
# ============================================
# Frontend URLs that can access the API
ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,https://localhost:3000

# Frontend URL for OAuth callbacks
FRONTEND_URL=http://localhost:3000

# ============================================
# Server Configuration
# ============================================
# Backend server settings
HOST=0.0.0.0
PORT=8080
DEBUG=true

# ============================================
# OAuth Callback URLs (for provider registration)
# ============================================
# Use these URLs when registering OAuth applications:
# Google: http://localhost:8080/api/v1/auth/callback/google
# GitHub: http://localhost:8080/api/v1/auth/callback/github
# Microsoft: http://localhost:8080/api/v1/auth/callback/microsoft
#
# For production, replace localhost:8080 with your domain

# ============================================
# Rate Limiting Configuration
# ============================================
# OAuth endpoint rate limits (requests per minute)
OAUTH_RATE_LIMIT=10
REFRESH_TOKEN_RATE_LIMIT=5

# ============================================
# Security Headers
# ============================================
# Additional security settings
SECURE_COOKIES=false  # Set to true in production with HTTPS
COOKIE_SAMESITE=lax  # Use 'lax' for cross-origin with localhost, 'strict' for production
COOKIE_DOMAIN=  # Empty for development (defaults to current host), set to actual domain in production
HTTPONLY_COOKIES=true

# ============================================
# Logging Configuration
# ============================================
LOG_LEVEL=DEBUG
LOG_FORMAT="%(asctime)s - %(name)s - %(levelname)s - %(message)s"

# ============================================
# LLM Configuration
# ============================================
# At least one of the providers is required
MODEL_ID=anthropic:claude-3-5-haiku-20241022
ANTHROPIC_API_KEY=your-anthropic-api-key
OPENAI_API_KEY=your-openai-api-key
GEMINI_API_KEY=your-gemini-api-key

# ============================================
# SETUP INSTRUCTIONS
# ============================================
# 1. Generate a secure JWT secret key and replace JWT_SECRET_KEY
# 2. Register OAuth applications with each provider:
#    - Google: https://console.developers.google.com/
#    - GitHub: https://github.com/settings/developers
#    - Microsoft: https://portal.azure.com/#view/Microsoft_AAD_RegisteredApps/ApplicationsListBlade
# 3. Configure callback URLs in each provider (see URLs above)
# 4. Replace placeholder client IDs and secrets with real values
# 5. Run: alembic upgrade head (to create database tables)
# 6. Start the server: uvicorn requirements_bot.main:app --reload --host 0.0.0.0 --port 8080