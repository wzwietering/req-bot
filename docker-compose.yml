services:
  backend:
    build:
      context: apps/backend
      dockerfile: Dockerfile
    container_name: req-bot-backend
    ports:
      - "8080:8000"
    environment:
      - REQUIREMENTS_BOT_DB_PATH=/app/data/requirements_bot.db
      - PYTHONPATH=/app
      - JWT_SECRET_KEY=dev-secret-key-change-in-production
    volumes:
      - backend_data:/app/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    networks:
      - req-bot-network

  frontend:
    build:
      context: .
      dockerfile: apps/frontend/Dockerfile
    container_name: req-bot-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://backend:8000
      - PORT=3000
      - HOSTNAME=0.0.0.0
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - req-bot-network

volumes:
  backend_data:
    driver: local

networks:
  req-bot-network:
    driver: bridge